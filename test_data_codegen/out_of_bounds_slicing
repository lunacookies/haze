func main() int {
	s_utf8 := "hello"
	s := alloc_ints(s_utf8.count)
	for i := 0; i < s_utf8.count; i++ {
		s[i] = cast(int) s_utf8[i]
	}

	for i := 0; true; i++ {
		print(s[0:i])
	}
}

func print(s []int) {
	utf8 := alloc(s.count + 1)
	for i := 0; i < s.count; i++ {
		utf8[i] = cast(byte) s[i]
	}
	utf8[utf8.count - 1] = "\n"[0]
	write(1, utf8.data, utf8.count)
}

func alloc_ints(count int) []int {
	bytes := alloc(count * 4)
	p := cast([*]int) bytes.data
	return p[0:count]
}

func alloc(count int) []byte {
	return calloc(count, 1)[0:count]
}

func calloc(count int, size int) [*]byte #extern
func write(fd int, p [*]byte, len int) #extern
======

h
he
hel
hell
hello
signal: 5 (SIGTRAP)
