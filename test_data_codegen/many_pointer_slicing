func main() int {
	s_utf8 := "foo bar baz quux\n"
	s := alloc_ints(s_utf8.count)
	for i := 0; i < s_utf8.count; i++ {
		s[i] = cast(int) s_utf8[i]
	}

	frob(cast([*]int) &s[8])
	print(s)
}

func frob(data [*]int) {
	set(data[3:8], "z"[0])
	set(data[-4:-1], "-"[0])
}

func set(s []int, b byte) {
	for i := 0; i < s.count; i++ {
		s[i] = cast(int) b
	}
}

func print(s []int) {
	utf8 := alloc(s.count)
	for i := 0; i < s.count; i++ {
		utf8[i] = cast(byte) s[i]
	}
	write(1, utf8.data, utf8.count)
}

func alloc_ints(count int) []int {
	p := cast([*]int) calloc(count, 4)
	return p[0:count]
}

func alloc(count int) []byte {
	return calloc(count, 1)[0:count]
}

func calloc(count int, size int) [*]byte #extern
func write(fd int, p [*]byte, len int) #extern
======
foo --- bazzzzzz
exit status: 0
