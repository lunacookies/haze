func expressions(parameter int, slice []int) {
	10
	true
	false
	"hello"
	'A'
	'\n'
	a := 92
	a + 2 * 3 * 4 * 5
	~a - -1
	!true && false
	parameter
	b := add(9, 2)
	ptr := &b
	ptr_value := *ptr
	also_ptr := cast([*]int) ptr
	also_ptr_value := also_ptr[0]
	s := "a string"
	slice[8]
	sliced := slice[0:10]
	slice_data := slice.data
	slice_count := slice.count
	sliced = slice_data[20:30]
	sliced = sliced[:10]
	sliced = sliced[1:]
	sliced = slice_data[:10]
	many_ptr := slice_data[3:]
}

func add(x int, y int) int {
	return x + y
}
======
func expressions
	param parameter int
	param slice []int
	var a int
	var b int
	var ptr *int
	var ptr_value int
	var also_ptr [*]int
	var also_ptr_value int
	var s []byte
	var sliced []int
	var slice_data [*]int
	var slice_count int
	var many_ptr [*]int
{
	10
	true
	false
	"hello"
	65_byte
	10_byte
	a = 92
	(a + (((2 * 3) * 4) * 5))
	((~a) - (-1))
	((!true) && false)
	parameter
	b = add(9, 2)
	ptr = (&b)
	ptr_value = (*ptr)
	also_ptr = cast([*]int, ptr)
	also_ptr_value = (also_ptr[0])
	s = "a string"
	(slice[8])
	sliced = (slice[0:10])
	slice_data = slice.data
	slice_count = slice.count
	sliced = (slice_data[20:30])
	sliced = (sliced[0:10])
	sliced = (sliced[1:])
	sliced = (slice_data[0:10])
	many_ptr = (slice_data[3:])
}

func add
	param x int
	param y int
{
	return (x + y)
}
