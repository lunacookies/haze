proc expressions() {
	10; 20
	abc
	true; false

	a + b
	1 + 2 + 3 + 4
	1 + 2 * 3
	2 == 3 && 4 == 5 || 6 == 7 && 8 == 9
	2 & 3 | 6 & 7
	2 & 3 ^ 6 & 7
	1 << 2 + 2
	1 | 2 ^ 3 | 4 ^ 5

	proc_name()
	proc_name(a)
	proc_name(a, b)
	proc_name(1 + 1, 2 * 2)
	proc_name(trailing, comma,)

	var my_t MyType
	my_t.a = 92
	my_t.b.c = 29
	my_t.a = b.c

	x(&foo)
	x(&foo.bar.baz)
	x(*ptr)
	x(*ptr.with.fields)
	x(*a + 10)
	x(&a + 10)

	cast(int) true
	cast(int) a + 10
}

struct MyType {
	a int
	b Nested
}

struct Nested {
	c int
}
======
proc expressions()
{
	10
	20
	abc
	true
	false
	(a + b)
	(((1 + 2) + 3) + 4)
	(1 + (2 * 3))
	(((2 == 3) && (4 == 5)) || ((6 == 7) && (8 == 9)))
	((2 & 3) | (6 & 7))
	((2 & 3) ^ (6 & 7))
	((1 << 2) + 2)
	((((1 | 2) ^ 3) | 4) ^ 5)
	proc_name()
	proc_name(a)
	proc_name(a, b)
	proc_name((1 + 1), (2 * 2))
	proc_name(trailing, comma)
	var my_t MyType
	(my_t.a) = 92
	((my_t.b).c) = 29
	(my_t.a) = (b.c)
	x((&foo))
	x((&((foo.bar).baz)))
	x((*ptr))
	x((*((ptr.with).fields)))
	x(((*a) + 10))
	x(((&a) + 10))
	cast(int, true)
	(cast(int, a) + 10)
}

struct MyType
{
	a int
	b Nested
}

struct Nested
{
	c int
}
