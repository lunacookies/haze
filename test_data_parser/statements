proc statements() {
	var a int
	var b int
	c := 100
	a = c
	a /= b
	a++
	a--
	return
	return foo

	{
		single_nested := true
		{
			double_nested := true
			single_nested = false
		}
	}

	if true {
		a += 10
	}

	condition := false
	if condition {
		a -= 4
		return a
	} else {
		b = a - b
		return b
	}

	i := 0
	for {
		if i > 10 {
			break
		}

		i++
	}
	for i <= 10 {
		i++
	}
	for i := 0; i <= 10; i++ {}
}
======
proc statements()
{
	var a int
	var b int
	c := 100
	a = c
	a = (a / b)
	a = (a + 1)
	a = (a - 1)
	return
	return foo
	{
		single_nested := true
		{
			double_nested := true
			single_nested = false
		}
	}
	if true {
		a = (a + 10)
	}
	condition := false
	if condition {
		a = (a - 4)
		return a
	} else {
		b = (a - b)
		return b
	}
	i := 0
	for {
		if (i > 10) {
			break
		}
		i = (i + 1)
	}
	for (i <= 10) {
		i = (i + 1)
	}
	for i := 0; (i <= 10); i = (i + 1) {
	}
}
